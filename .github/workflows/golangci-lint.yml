name: golangci-lint
on:
  push:
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
    linters:
      # only enable the linters listed below
      disable-all: true
      enable:
        # make sure all errors returned by functions are handled
        - errcheck

        # find unused code
        - deadcode

        # show how code can be simplified
        - gosimple

        # # make sure code is formatted
        - gofmt

        # examine code and report suspicious constructs, such as Printf calls whose
        # arguments do not align with the format string
        - govet

        # make sure names and comments are used according to the conventions
        - revive

        # detect when assignments to existing variables are not used
        - ineffassign

        # run static analysis and find errors
        - staticcheck

        # find unused variables, functions, structs, types, etc.
        - unused

        # find unused struct fields
        - structcheck

        # find unused global variables
        - varcheck

        # parse and typecheck code
        - typecheck
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0 

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          install-mode: "goinstall"